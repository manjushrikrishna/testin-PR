name: PR and List Open PRs

on:
  push:
    branches:
      - test

jobs:
  check-or-create-pr:
    name: Check or Create PR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set environment variables
        run: |
          echo "GITHUB_REPOSITORY=${{ github.repository }}" >> $GITHUB_ENV
          echo "TEST_BRANCH=test" >> $GITHUB_ENV
          echo "DEV_BRANCH=dev" >> $GITHUB_ENV

      - name: Check if PR exists from test to dev
        id: check-pr
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          # Get the list of open pull requests from test to dev
          PRS=$(curl -s \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls?base=$DEV_BRANCH&head=$TEST_BRANCH&state=open")
          
          # Check if any open PRs exist
          PR_COUNT=$(echo "$PRS" | grep -o '\"id\":' | wc -l)
          
          if [ "$PR_COUNT" -eq 0 ]; then
            echo "No open PR found."
          else
            echo "$PR_COUNT open PR(s) found."
          fi
          
          echo "::set-output name=exists::$PR_COUNT"

      - name: Create PR from test to dev
        if: steps.check-pr.outputs.exists == '0'
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN}}
        run: |
          # Create a new pull request via GitHub API
          curl -s \
            -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"title": "PR from test to dev", "head": "'"$TEST_BRANCH"'", "base": "'"$DEV_BRANCH"'", "body": "Automatically created PR"}' \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls"

  list-open-prs:
    name: List Open Pull Requests
    needs: check-or-create-pr
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: List Open PRs
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          # List all open PRs with number, title, and author login using GitHub API
          PRS=$(curl -s \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls?state=open")

          # Parse and display the number, title, and author of each PR
          echo "$PRS" | jq -r '.[] | "\(.number) - \(.title) by \(.user.login)"'
